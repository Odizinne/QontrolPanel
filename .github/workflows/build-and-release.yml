name: Build and release

on:
  workflow_dispatch:

env:
  QT_VERSION: '6.9.0'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install Qt
        id: qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          add-tools-to-path: true
          cache: true

      - name: Generate and Build with CMake
        shell: pwsh
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release 
          cmake --install . --config Release

      - name: Zip binaries folder
        shell: pwsh
        run: |
          $zipFile = "build/QuickSoundSwitcher_msvc_64.zip"
          $folder = "build/install"
          Compress-Archive -Path $folder -DestinationPath $zipFile

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: QuickSoundSwitcher_msvc_64
          path: build/QuickSoundSwitcher_msvc_64.zip

      - name: Get latest Git tag and bump version
        id: get_version
        shell: bash
        run: |
          git fetch --tags  # Fetch all tags
          # Get the latest tag sorted by version, falling back to "0" if none exist
          TAG=$(git tag --sort=-v:refname | head -n 1 || echo "0")
          # Extract the numeric part of the tag
          VERSION_NUM=$(echo $TAG | grep -o '[0-9]\+' | tail -n 1)
          # Increment the version number
          NEXT_VERSION=$((VERSION_NUM + 1))
          echo "New version: $NEXT_VERSION"
          echo "TagVersion=${NEXT_VERSION}" >> $GITHUB_ENV

      - name: Update .iss version
        shell: pwsh
        run: |
          # Use the version number calculated in the previous step
          $content = Get-Content tools/installer.iss
          $new = $content -replace '(?<=#define AppVersion ")[^"]+', "${{ env.TagVersion }}"
          Set-Content tools/installer.iss -Value $new

      - name: Create Installer 
        shell: pwsh
        run: |
          $env:Path += ";${env:ProgramFiles(x86)}\Inno Setup 6"
          iscc.exe tools/installer.iss

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: QuickSoundSwitcher_Installer
          path: tools/Output/QuickSoundSwitcher_Installer.exe

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: QuickSoundSwitcher_msvc_64

      - name: Download Windows Installer
        uses: actions/download-artifact@v4
        with:
          name: QuickSoundSwitcher_Installer
          path: installer
          
      - name: Bump version and create release
        id: bump_release
        run: |
          git fetch --tags
          
          # Determine the latest major version tag
          LAST_MAJOR_TAG=$(git tag --list 'v*.*.*' | sed -E 's/^v?([0-9]+)\..*/\1/' | sort -nr | head -n 1)
          
          # Increment the major version number
          if [ -z "$LAST_MAJOR_TAG" ]; then
            NEW_TAG="v1"
          else
            NEW_TAG="v$(($LAST_MAJOR_TAG + 1))"
          fi

          # Check if the tag already exists
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "Tag '$NEW_TAG' already exists. Incrementing to next major version."
            LAST_MAJOR_TAG=$(git tag --list 'v*' | sed -E 's/^v?([0-9]+).*/\1/' | sort -nr | head -n 1)
            NEW_TAG="v$(($LAST_MAJOR_TAG + 1))"
          fi

          echo "New tag is $NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.new_tag }}
          release_name: ${{ env.new_tag }}
          body: ""
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: QuickSoundSwitcher_msvc_64.zip
          asset_name: QuickSoundSwitcher_msvc_64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Installer asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: installer/QuickSoundSwitcher_Installer.exe 
          asset_name: QuickSoundSwitcher_Installer.exe  
          asset_content_type: application/vnd.microsoft.portable-executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}